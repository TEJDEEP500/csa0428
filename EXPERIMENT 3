
#include <stdio.h>

int main() {
    int A[100][4]; 
    int i, j, n, total = 0, index, temp; 
    float avg_wt, avg_tat; 

    printf("Enter number of processes: "); 
    scanf("%d", &n); 

    printf("Enter Burst Time:\n"); 
    for (i = 0; i < n; i++) { 
        printf("P%d: ", i + 1); 
        scanf("%d", &A[i][1]); 
        A[i][0] = i + 1; 
    } 

    // Sorting processes based on burst time
    for (i = 0; i < n; i++) { 
        index = i; 
        for (j = i + 1; j < n; j++) 
            if (A[j][1] < A[index][1]) 
                index = j; 

        // Swap burst times
        temp = A[i][1]; 
        A[i][1] = A[index][1]; 
        A[index][1] = temp; 

        // Swap process IDs
        temp = A[i][0]; 
        A[i][0] = A[index][0]; 
        A[index][0] = temp; 
    } 

    // Calculate waiting time
    A[0][2] = 0; // Waiting time for first process is 0
    for (i = 1; i < n; i++) { 
        A[i][2] = A[i - 1][2] + A[i - 1][1]; // Correctly accumulate waiting time
        total += A[i][2]; 
    } 

    avg_wt = (float)total / n; 
    total = 0; 

    printf("P\tBT\tWT\tTAT\n"); 

    // Calculate turnaround time and display results
    for (i = 0; i < n; i++) { 
        A[i][3] = A[i][1] + A[i][2]; // Turnaround time = Burst time + Waiting time
        total += A[i][3]; 
        printf("P%d\t%d\t%d\t%d\n", A[i][0], A[i][1], A[i][2], A[i][3]); 
    } 

    avg_tat = (float)total / n; 
    printf("Average Waiting Time= %f\n", avg_wt); 
    printf("Average Turnaround Time= %f\n", avg_tat); 

    return 0; 
}
